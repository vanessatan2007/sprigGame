/*
First time? Check out the tutorial game:
https://sprig.hackclub.com/gallery/getting_started

@title: 
@author: 
@tags: []
@addedOn: 2024-00-00
*/

const player = "p";
const sunlight = "s";
const water = "w";
const co2 = "c";

setLegend(
  [ player, bitmap`
................
................
................
................
................
................
.....44.44......
.....44444......
......444.......
.......4........
.......4........
.......4........
....C..4..C.....
....CCCCCCC.....
.....CCCCC......
.....CCCCC......` ],
  [ sunlight, bitmap`
................
................
................
............6...
...........66...
.......6..66..6.
......66.66..66.
.....66..6..66..
....66..66.66...
....6..66..6....
...66..6..66....
..66..66.66.....
.....66..6......
...666..66......
.......66.......
................`
  ],
  [water, bitmap`
................
................
................
.......7........
......777.......
......777.......
.....77777......
.....77777......
....7777777.....
....7777777.....
....7777777.....
.....77777......
......777.......
................
................
................`],
  [co2, bitmap`
................
.....1...11.....
....11..11......
....1...1.......
....1...11......
....11...1......
.....1...11.....
.....11...1.....
......1...11....
.....11...11....
....11....1.....
....1.....1.....
....1.....1.....
....11...1......
.....11..1......
................`]
)

setSolids([])
setPushables({
  [ player ]: []
})

let level = 0
const levels = [
  map`
c.w.s
.....
.....
.....
..p..`,
  map`
c.w..s
......
......
......
......
...p..`
]
const currentLevel = levels[level];
setMap(currentLevel);


onInput("a", () => {
  getFirst(player).x -= 1
})
onInput("d", () => {
  getFirst(player).x += 1
})
onInput("j", () => {
  const currentLevel = levels[level]; // get the original map of the level

  // make sure the level exists before we load it
  if (currentLevel !== undefined) {
    clearText("");
    setMap(currentLevel);
  }
});

let plantSun = tilesWith(player, sunlight).length;
  let plantWater = tilesWith(player, water).length;
  let plantCo2 = tilesWith(player, co2).length;


function despawn() {
  let waters = getAll(water);
  let sunlights = getAll(sunlight);
  let co2s = getAll(co2);

  for (let i = 0; i < waters.length; i++) {
   if (waters[i].y == 5) {
     waters[i].remove();
   }
  }
}





afterInput(() => {
  //move all sprites down
  getFirst(sunlight).y += 1;
  getFirst(water).y += 1;
  getFirst(co2).y += 1;
  despawn();

  plantSun = plantSun + tilesWith(player, sunlight).length;
  plantWater = plantWater + tilesWith(player, water).length;
  plantCo2 = plantCo2 + tilesWith(player, co2).length;
  if(plantSun > 0) {
    sunlight.remove;
  }
  water.remove;
  if (plantSun === 1 && plantWater === 1 && plantCo2===1) {
    // increase the current level number
    level = level + 1;

    const currentLevel = levels[level];

    // make sure the level exists and if so set the map
    // otherwise, we have finished the last level, there is no level
    // after the last level
    if (currentLevel !== undefined) {
      setMap(currentLevel);
    } else {
      addText("you win!", { y: 4, color: color`3` });
    }
  }
})

var gameLoop = setInterval(() => {
  despawn();
}, 250);